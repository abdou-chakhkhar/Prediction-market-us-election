{
  "contractName": "PredictionMarket",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_oracle",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "enum PredictionMarket.Side",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "bets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "enum PredictionMarket.Side",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "betsPerGambler",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "electionFinished",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "result",
      "outputs": [
        {
          "internalType": "enum PredictionMarket.Side",
          "name": "winner",
          "type": "uint8"
        },
        {
          "internalType": "enum PredictionMarket.Side",
          "name": "loser",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum PredictionMarket.Side",
          "name": "_side",
          "type": "uint8"
        }
      ],
      "name": "placeBet",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawGain",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum PredictionMarket.Side",
          "name": "_winner",
          "type": "uint8"
        },
        {
          "internalType": "enum PredictionMarket.Side",
          "name": "_loser",
          "type": "uint8"
        }
      ],
      "name": "reportResult",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.3+commit.9bfce1f6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_oracle\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"enum PredictionMarket.Side\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"bets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum PredictionMarket.Side\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"betsPerGambler\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"electionFinished\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum PredictionMarket.Side\",\"name\":\"_side\",\"type\":\"uint8\"}],\"name\":\"placeBet\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum PredictionMarket.Side\",\"name\":\"_winner\",\"type\":\"uint8\"},{\"internalType\":\"enum PredictionMarket.Side\",\"name\":\"_loser\",\"type\":\"uint8\"}],\"name\":\"reportResult\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"result\",\"outputs\":[{\"internalType\":\"enum PredictionMarket.Side\",\"name\":\"winner\",\"type\":\"uint8\"},{\"internalType\":\"enum PredictionMarket.Side\",\"name\":\"loser\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawGain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/PredictionMarket.sol\":\"PredictionMarket\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/PredictionMarket.sol\":{\"keccak256\":\"0x51d05ba30e7f14ed4394396bcbe84514bddcd6c0900a777096799a547f07698b\",\"urls\":[\"bzz-raw://3f363d2bc340f14c58c5bdf270063926c42c7461955a565fb366bd149141883b\",\"dweb:/ipfs/QmStx5E4qLm6CJMQPkBWdzF778sboMkUHGP7oHMLayewKr\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610a0b380380610a0b8339818101604052602081101561003357600080fd5b810190808051906020019092919050505080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610976806100956000396000f3fe60806040526004361061007b5760003560e01c80637dc0d1d01161004e5780637dc0d1d01461015b5780637e0ecc001461019c5780639d5a3739146101ee578063beab6e7e146102605761007b565b80632b539c861461008057806343046844146100975780634ec942b7146100c85780636537214714610113575b600080fd5b34801561008c57600080fd5b5061009561028d565b005b6100c6600480360360208110156100ad57600080fd5b81019080803560ff1690602001909291905050506105b3565b005b3480156100d457600080fd5b50610111600480360360408110156100eb57600080fd5b81019080803560ff169060200190929190803560ff1690602001909291905050506106ea565b005b34801561011f57600080fd5b5061012861089e565b6040518083600181111561013857fe5b815260200182600181111561014957fe5b81526020019250505060405180910390f35b34801561016757600080fd5b506101706108ca565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101a857600080fd5b506101d8600480360360208110156101bf57600080fd5b81019080803560ff1690602001909291905050506108f0565b6040518082815260200191505060405180910390f35b3480156101fa57600080fd5b5061024a6004803603604081101561021157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff169060200190929190505050610908565b6040518082815260200191505060405180910390f35b34801561026c57600080fd5b5061027561092d565b60405180821515815260200191505060405180910390f35b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008060000160009054906101000a900460ff1660018111156102ed57fe5b60018111156102f857fe5b81526020019081526020016000205490506000811161037f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f596f7520646f206e6f74206861766520616e792077696e6e696e67206265740081525060200191505060405180910390fd5b60018060006101000a81548160ff021916908315150217905561040a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f656c656374696f6e206e6f742066696e6973686564000000000000000000000081525060200191505060405180910390fd5b6000600260008060000160009054906101000a900460ff16600181111561042d57fe5b600181111561043857fe5b81526020019081526020016000205482600260008060000160019054906101000a900460ff16600181111561046957fe5b600181111561047457fe5b815260200190815260200160002054028161048b57fe5b04820190506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008060018111156104df57fe5b60018111156104ea57fe5b8152602001908152602001600020819055506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060018081111561054b57fe5b600181111561055657fe5b8152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156105ae573d6000803e3d6000fd5b505050565b60001515600160009054906101000a900460ff1615151461063c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f656c656374696f6e2069732066696e697368656400000000000000000000000081525060200191505060405180910390fd5b346002600083600181111561064d57fe5b600181111561065857fe5b81526020019081526020016000206000828254019250508190555034600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008360018111156106c157fe5b60018111156106cc57fe5b81526020019081526020016000206000828254019250508190555050565b3373ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4f6e6c79204f7261636c6520616c6c6f77656420746f207265706f727400000081525060200191505060405180910390fd5b60001515600160009054906101000a900460ff16151514610836576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f456c656374696f6e2069732066696e697368656400000000000000000000000081525060200191505060405180910390fd5b816000800160006101000a81548160ff0219169083600181111561085657fe5b0217905550806000800160016101000a81548160ff0219169083600181111561087b57fe5b021790555060018060006101000a81548160ff0219169083151502179055505050565b60008060000160009054906101000a900460ff16908060000160019054906101000a900460ff16905082565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b6003602052816000526040600020602052806000526040600020600091509150505481565b600160009054906101000a900460ff168156fea26469706673582212208894364fc00edcea2aa412c5d22f33e7af1b826f4779b1b2ac3d1be1710539ff64736f6c63430007030033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80637dc0d1d01161004e5780637dc0d1d01461015b5780637e0ecc001461019c5780639d5a3739146101ee578063beab6e7e146102605761007b565b80632b539c861461008057806343046844146100975780634ec942b7146100c85780636537214714610113575b600080fd5b34801561008c57600080fd5b5061009561028d565b005b6100c6600480360360208110156100ad57600080fd5b81019080803560ff1690602001909291905050506105b3565b005b3480156100d457600080fd5b50610111600480360360408110156100eb57600080fd5b81019080803560ff169060200190929190803560ff1690602001909291905050506106ea565b005b34801561011f57600080fd5b5061012861089e565b6040518083600181111561013857fe5b815260200182600181111561014957fe5b81526020019250505060405180910390f35b34801561016757600080fd5b506101706108ca565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101a857600080fd5b506101d8600480360360208110156101bf57600080fd5b81019080803560ff1690602001909291905050506108f0565b6040518082815260200191505060405180910390f35b3480156101fa57600080fd5b5061024a6004803603604081101561021157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803560ff169060200190929190505050610908565b6040518082815260200191505060405180910390f35b34801561026c57600080fd5b5061027561092d565b60405180821515815260200191505060405180910390f35b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008060000160009054906101000a900460ff1660018111156102ed57fe5b60018111156102f857fe5b81526020019081526020016000205490506000811161037f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f596f7520646f206e6f74206861766520616e792077696e6e696e67206265740081525060200191505060405180910390fd5b60018060006101000a81548160ff021916908315150217905561040a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f656c656374696f6e206e6f742066696e6973686564000000000000000000000081525060200191505060405180910390fd5b6000600260008060000160009054906101000a900460ff16600181111561042d57fe5b600181111561043857fe5b81526020019081526020016000205482600260008060000160019054906101000a900460ff16600181111561046957fe5b600181111561047457fe5b815260200190815260200160002054028161048b57fe5b04820190506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008060018111156104df57fe5b60018111156104ea57fe5b8152602001908152602001600020819055506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600060018081111561054b57fe5b600181111561055657fe5b8152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156105ae573d6000803e3d6000fd5b505050565b60001515600160009054906101000a900460ff1615151461063c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f656c656374696f6e2069732066696e697368656400000000000000000000000081525060200191505060405180910390fd5b346002600083600181111561064d57fe5b600181111561065857fe5b81526020019081526020016000206000828254019250508190555034600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008360018111156106c157fe5b60018111156106cc57fe5b81526020019081526020016000206000828254019250508190555050565b3373ffffffffffffffffffffffffffffffffffffffff16600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146107ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f4f6e6c79204f7261636c6520616c6c6f77656420746f207265706f727400000081525060200191505060405180910390fd5b60001515600160009054906101000a900460ff16151514610836576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f456c656374696f6e2069732066696e697368656400000000000000000000000081525060200191505060405180910390fd5b816000800160006101000a81548160ff0219169083600181111561085657fe5b0217905550806000800160016101000a81548160ff0219169083600181111561087b57fe5b021790555060018060006101000a81548160ff0219169083151502179055505050565b60008060000160009054906101000a900460ff16908060000160019054906101000a900460ff16905082565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528060005260406000206000915090505481565b6003602052816000526040600020602052806000526040600020600091509150505481565b600160009054906101000a900460ff168156fea26469706673582212208894364fc00edcea2aa412c5d22f33e7af1b826f4779b1b2ac3d1be1710539ff64736f6c63430007030033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "26:1422:1:-:0;;;361:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;417:7;408:6;;:16;;;;;;;;;;;;;;;;;;361:70;26:1422;;;;;;",
  "deployedSourceMap": "26:1422:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;657:480;;;;;;;;;;;;;:::i;:::-;;439:212;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1143:302;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;156:20;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;325:29;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;217:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;256:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;182:28;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;657:480;700:15;718:14;:26;733:10;718:26;;;;;;;;;;;;;;;:41;745:6;:13;;;;;;;;;;;;718:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;700:59;;790:1;777:10;:14;769:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;864:4;845:16;;:23;;;;;;;;;;;;;;;;;837:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;904:9;963:4;:19;968:6;:13;;;;;;;;;;;;963:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;950:10;929:4;:18;934:6;:12;;;;;;;;;;;;929:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;:31;:53;;;;;;916:10;:66;904:78;;1033:1;992:14;:26;1007:10;992:26;;;;;;;;;;;;;;;:38;1019:10;992:38;;;;;;;;;;;;;;;;;;;;;;;;;;;:42;;;;1085:1;1044:14;:26;1059:10;1044:26;;;;;;;;;;;;;;;:38;1071:10;1044:38;;;;;;;;;;;;;;;;;;;;;;;;;;;:42;;;;1104:10;1096:28;;:34;1125:4;1096:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;657:480;;:::o;439:212::-;524:5;504:25;;:16;;;;;;;;;;;:25;;;496:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;579:9;564:4;:11;569:5;564:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;635:9;598:14;:26;613:10;598:26;;;;;;;;;;;;;;;:33;625:5;598:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;:46;;;;;;;;;;;439:212;:::o;1143:302::-;1229:10;1219:20;;:6;;;;;;;;;;;:20;;;1211:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1311:5;1291:25;;:16;;;;;;;;;;;:25;;;1283:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1367:7;1351:6;:13;;;:23;;;;;;;;;;;;;;;;;;;;;;;;1399:6;1384;:12;;;:21;;;;;;;;;;;;;;;;;;;;;;;;1434:4;1415:16;;:23;;;;;;;;;;;;;;;;;;1143:302;;:::o;156:20::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;325:29::-;;;;;;;;;;;;;:::o;217:33::-;;;;;;;;;;;;;;;;;:::o;256:63::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;182:28::-;;;;;;;;;;;;;:::o",
  "source": "pragma solidity >=0.7.3;\n\ncontract PredictionMarket {\n    enum Side { Biden, Trump }\n    struct Result {\n        Side winner;\n        Side loser;\n    }\n    Result public result;\n    bool public electionFinished;\n\n    mapping(Side => uint) public bets;\n    mapping(address => mapping(Side => uint)) public betsPerGambler;\n    address payable public oracle;\n\n    constructor(address payable _oracle) {\n        oracle = _oracle;\n    }\n\n\n\n    function placeBet(Side _side) external payable {\n        require(electionFinished == false, 'election is finished');\n        bets[_side] += msg.value;\n        betsPerGambler[msg.sender][_side] += msg.value;\n    }\n\n    function withdrawGain() external {\n        uint gamblerBet = betsPerGambler[msg.sender][result.winner];\n        require(gamblerBet > 0, 'You do not have any winning bet');\n        require(electionFinished = true, 'election not finished');\n        uint gain = gamblerBet + bets[result.loser] * gamblerBet / bets[result.winner];\n        betsPerGambler[msg.sender][Side.Biden] = 0;\n        betsPerGambler[msg.sender][Side.Trump] = 0;\n        payable(msg.sender).transfer(gain);\n    }\n\n    function reportResult(Side _winner, Side _loser) external {\n        require(oracle == msg.sender, 'Only Oracle allowed to report');\n        require(electionFinished == false, 'Election is finished');\n        result.winner = _winner;\n        result.loser = _loser;\n        electionFinished = true;\n    }\n\n}",
  "sourcePath": "/home/abdou/Documents/Prediction-market-us-election/contracts/PredictionMarket.sol",
  "ast": {
    "absolutePath": "project:/contracts/PredictionMarket.sol",
    "exportedSymbols": {
      "PredictionMarket": [
        211
      ]
    },
    "id": 212,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".3"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 211,
        "linearizedBaseContracts": [
          211
        ],
        "name": "PredictionMarket",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "PredictionMarket.Side",
            "id": 37,
            "members": [
              {
                "id": 35,
                "name": "Biden",
                "nodeType": "EnumValue",
                "src": "70:5:1"
              },
              {
                "id": 36,
                "name": "Trump",
                "nodeType": "EnumValue",
                "src": "77:5:1"
              }
            ],
            "name": "Side",
            "nodeType": "EnumDefinition",
            "src": "58:26:1"
          },
          {
            "canonicalName": "PredictionMarket.Result",
            "id": 42,
            "members": [
              {
                "constant": false,
                "id": 39,
                "mutability": "mutable",
                "name": "winner",
                "nodeType": "VariableDeclaration",
                "scope": 42,
                "src": "113:11:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Side_$37",
                  "typeString": "enum PredictionMarket.Side"
                },
                "typeName": {
                  "id": 38,
                  "name": "Side",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 37,
                  "src": "113:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$37",
                    "typeString": "enum PredictionMarket.Side"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 41,
                "mutability": "mutable",
                "name": "loser",
                "nodeType": "VariableDeclaration",
                "scope": 42,
                "src": "134:10:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Side_$37",
                  "typeString": "enum PredictionMarket.Side"
                },
                "typeName": {
                  "id": 40,
                  "name": "Side",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 37,
                  "src": "134:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$37",
                    "typeString": "enum PredictionMarket.Side"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Result",
            "nodeType": "StructDefinition",
            "scope": 211,
            "src": "89:62:1",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "65372147",
            "id": 44,
            "mutability": "mutable",
            "name": "result",
            "nodeType": "VariableDeclaration",
            "scope": 211,
            "src": "156:20:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Result_$42_storage",
              "typeString": "struct PredictionMarket.Result"
            },
            "typeName": {
              "id": 43,
              "name": "Result",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 42,
              "src": "156:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Result_$42_storage_ptr",
                "typeString": "struct PredictionMarket.Result"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "beab6e7e",
            "id": 46,
            "mutability": "mutable",
            "name": "electionFinished",
            "nodeType": "VariableDeclaration",
            "scope": 211,
            "src": "182:28:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 45,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "182:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7e0ecc00",
            "id": 50,
            "mutability": "mutable",
            "name": "bets",
            "nodeType": "VariableDeclaration",
            "scope": 211,
            "src": "217:33:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_enum$_Side_$37_$_t_uint256_$",
              "typeString": "mapping(enum PredictionMarket.Side => uint256)"
            },
            "typeName": {
              "id": 49,
              "keyType": {
                "id": 47,
                "name": "Side",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 37,
                "src": "225:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_Side_$37",
                  "typeString": "enum PredictionMarket.Side"
                }
              },
              "nodeType": "Mapping",
              "src": "217:21:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_enum$_Side_$37_$_t_uint256_$",
                "typeString": "mapping(enum PredictionMarket.Side => uint256)"
              },
              "valueType": {
                "id": 48,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "233:4:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9d5a3739",
            "id": 56,
            "mutability": "mutable",
            "name": "betsPerGambler",
            "nodeType": "VariableDeclaration",
            "scope": 211,
            "src": "256:63:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$37_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
            },
            "typeName": {
              "id": 55,
              "keyType": {
                "id": 51,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "264:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "256:41:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$37_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
              },
              "valueType": {
                "id": 54,
                "keyType": {
                  "id": 52,
                  "name": "Side",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 37,
                  "src": "283:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$37",
                    "typeString": "enum PredictionMarket.Side"
                  }
                },
                "nodeType": "Mapping",
                "src": "275:21:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_enum$_Side_$37_$_t_uint256_$",
                  "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                },
                "valueType": {
                  "id": 53,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "291:4:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7dc0d1d0",
            "id": 58,
            "mutability": "mutable",
            "name": "oracle",
            "nodeType": "VariableDeclaration",
            "scope": 211,
            "src": "325:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 57,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "325:15:1",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 67,
              "nodeType": "Block",
              "src": "398:33:1",
              "statements": [
                {
                  "expression": {
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 63,
                      "name": "oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 58,
                      "src": "408:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 64,
                      "name": "_oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "417:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "408:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "408:16:1"
                }
              ]
            },
            "id": 68,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "mutability": "mutable",
                  "name": "_oracle",
                  "nodeType": "VariableDeclaration",
                  "scope": 68,
                  "src": "373:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "373:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "372:25:1"
            },
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "398:0:1"
            },
            "scope": 211,
            "src": "361:70:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 97,
              "nodeType": "Block",
              "src": "486:165:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 76,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 74,
                          "name": "electionFinished",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46,
                          "src": "504:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "524:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "504:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "656c656374696f6e2069732066696e6973686564",
                        "id": 77,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "531:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b986f5898326f417b081556bd907c58c5b8ef0652fc690b771b44307f001565f",
                          "typeString": "literal_string \"election is finished\""
                        },
                        "value": "election is finished"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b986f5898326f417b081556bd907c58c5b8ef0652fc690b771b44307f001565f",
                          "typeString": "literal_string \"election is finished\""
                        }
                      ],
                      "id": 73,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "496:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "496:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 79,
                  "nodeType": "ExpressionStatement",
                  "src": "496:58:1"
                },
                {
                  "expression": {
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 80,
                        "name": "bets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "564:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Side_$37_$_t_uint256_$",
                          "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                        }
                      },
                      "id": 82,
                      "indexExpression": {
                        "id": 81,
                        "name": "_side",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "569:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$37",
                          "typeString": "enum PredictionMarket.Side"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "564:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 83,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "579:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 84,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "579:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "564:24:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "564:24:1"
                },
                {
                  "expression": {
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 87,
                          "name": "betsPerGambler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "598:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$37_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
                          }
                        },
                        "id": 91,
                        "indexExpression": {
                          "expression": {
                            "id": 88,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "613:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 89,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "613:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "598:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Side_$37_$_t_uint256_$",
                          "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                        }
                      },
                      "id": 92,
                      "indexExpression": {
                        "id": 90,
                        "name": "_side",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70,
                        "src": "625:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$37",
                          "typeString": "enum PredictionMarket.Side"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "598:33:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 93,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "635:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 94,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "635:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "598:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 96,
                  "nodeType": "ExpressionStatement",
                  "src": "598:46:1"
                }
              ]
            },
            "functionSelector": "43046844",
            "id": 98,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "placeBet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 71,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 70,
                  "mutability": "mutable",
                  "name": "_side",
                  "nodeType": "VariableDeclaration",
                  "scope": 98,
                  "src": "457:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$37",
                    "typeString": "enum PredictionMarket.Side"
                  },
                  "typeName": {
                    "id": 69,
                    "name": "Side",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 37,
                    "src": "457:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$37",
                      "typeString": "enum PredictionMarket.Side"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "456:12:1"
            },
            "returnParameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "486:0:1"
            },
            "scope": 211,
            "src": "439:212:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 170,
              "nodeType": "Block",
              "src": "690:447:1",
              "statements": [
                {
                  "assignments": [
                    102
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 102,
                      "mutability": "mutable",
                      "name": "gamblerBet",
                      "nodeType": "VariableDeclaration",
                      "scope": 170,
                      "src": "700:15:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 101,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "700:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 110,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 103,
                        "name": "betsPerGambler",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "718:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$37_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
                        }
                      },
                      "id": 106,
                      "indexExpression": {
                        "expression": {
                          "id": 104,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "733:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "733:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "718:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_enum$_Side_$37_$_t_uint256_$",
                        "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                      }
                    },
                    "id": 109,
                    "indexExpression": {
                      "expression": {
                        "id": 107,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "745:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Result_$42_storage",
                          "typeString": "struct PredictionMarket.Result storage ref"
                        }
                      },
                      "id": 108,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "winner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39,
                      "src": "745:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$37",
                        "typeString": "enum PredictionMarket.Side"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "718:41:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "700:59:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 112,
                          "name": "gamblerBet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102,
                          "src": "777:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "790:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "777:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f206e6f74206861766520616e792077696e6e696e6720626574",
                        "id": 115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "793:33:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4a6c469159dbe2b1ce563e70d4dfb781a720f9a0aa12667fb34c0f2ff848f927",
                          "typeString": "literal_string \"You do not have any winning bet\""
                        },
                        "value": "You do not have any winning bet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4a6c469159dbe2b1ce563e70d4dfb781a720f9a0aa12667fb34c0f2ff848f927",
                          "typeString": "literal_string \"You do not have any winning bet\""
                        }
                      ],
                      "id": 111,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "769:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "769:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "769:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 119,
                          "name": "electionFinished",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46,
                          "src": "845:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "hexValue": "74727565",
                          "id": 120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "864:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "845:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "656c656374696f6e206e6f742066696e6973686564",
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "870:23:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7e6bdb27abe05a89bb6860279b9b8caf97f66bf335fd3b12194199de6a23f11",
                          "typeString": "literal_string \"election not finished\""
                        },
                        "value": "election not finished"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e7e6bdb27abe05a89bb6860279b9b8caf97f66bf335fd3b12194199de6a23f11",
                          "typeString": "literal_string \"election not finished\""
                        }
                      ],
                      "id": 118,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "837:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "837:57:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 124,
                  "nodeType": "ExpressionStatement",
                  "src": "837:57:1"
                },
                {
                  "assignments": [
                    126
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 126,
                      "mutability": "mutable",
                      "name": "gain",
                      "nodeType": "VariableDeclaration",
                      "scope": 170,
                      "src": "904:9:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 125,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "904:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 140,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 127,
                      "name": "gamblerBet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102,
                      "src": "916:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 128,
                            "name": "bets",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50,
                            "src": "929:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_enum$_Side_$37_$_t_uint256_$",
                              "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                            }
                          },
                          "id": 131,
                          "indexExpression": {
                            "expression": {
                              "id": 129,
                              "name": "result",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "934:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Result_$42_storage",
                                "typeString": "struct PredictionMarket.Result storage ref"
                              }
                            },
                            "id": 130,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "loser",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 41,
                            "src": "934:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Side_$37",
                              "typeString": "enum PredictionMarket.Side"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "929:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 132,
                          "name": "gamblerBet",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 102,
                          "src": "950:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "929:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "baseExpression": {
                          "id": 134,
                          "name": "bets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50,
                          "src": "963:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_Side_$37_$_t_uint256_$",
                            "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                          }
                        },
                        "id": 137,
                        "indexExpression": {
                          "expression": {
                            "id": 135,
                            "name": "result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44,
                            "src": "968:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Result_$42_storage",
                              "typeString": "struct PredictionMarket.Result storage ref"
                            }
                          },
                          "id": 136,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "winner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 39,
                          "src": "968:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Side_$37",
                            "typeString": "enum PredictionMarket.Side"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "963:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "929:53:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "916:66:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "904:78:1"
                },
                {
                  "expression": {
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 141,
                          "name": "betsPerGambler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "992:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$37_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
                          }
                        },
                        "id": 146,
                        "indexExpression": {
                          "expression": {
                            "id": 142,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1007:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1007:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "992:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Side_$37_$_t_uint256_$",
                          "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                        }
                      },
                      "id": 147,
                      "indexExpression": {
                        "expression": {
                          "id": 144,
                          "name": "Side",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "1019:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Side_$37_$",
                            "typeString": "type(enum PredictionMarket.Side)"
                          }
                        },
                        "id": 145,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Biden",
                        "nodeType": "MemberAccess",
                        "src": "1019:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$37",
                          "typeString": "enum PredictionMarket.Side"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "992:38:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1033:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "992:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 150,
                  "nodeType": "ExpressionStatement",
                  "src": "992:42:1"
                },
                {
                  "expression": {
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 151,
                          "name": "betsPerGambler",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 56,
                          "src": "1044:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_enum$_Side_$37_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
                          }
                        },
                        "id": 156,
                        "indexExpression": {
                          "expression": {
                            "id": 152,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1059:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 153,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1059:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1044:26:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Side_$37_$_t_uint256_$",
                          "typeString": "mapping(enum PredictionMarket.Side => uint256)"
                        }
                      },
                      "id": 157,
                      "indexExpression": {
                        "expression": {
                          "id": 154,
                          "name": "Side",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "1071:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_Side_$37_$",
                            "typeString": "type(enum PredictionMarket.Side)"
                          }
                        },
                        "id": 155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Trump",
                        "nodeType": "MemberAccess",
                        "src": "1071:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Side_$37",
                          "typeString": "enum PredictionMarket.Side"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1044:38:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1085:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1044:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 160,
                  "nodeType": "ExpressionStatement",
                  "src": "1044:42:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 167,
                        "name": "gain",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 126,
                        "src": "1125:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 163,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1104:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1104:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1096:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 161,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1096:8:1",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1096:19:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 166,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "1096:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1096:34:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 169,
                  "nodeType": "ExpressionStatement",
                  "src": "1096:34:1"
                }
              ]
            },
            "functionSelector": "2b539c86",
            "id": 171,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawGain",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "678:2:1"
            },
            "returnParameters": {
              "id": 100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "690:0:1"
            },
            "scope": 211,
            "src": "657:480:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 209,
              "nodeType": "Block",
              "src": "1201:244:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "id": 182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 179,
                          "name": "oracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58,
                          "src": "1219:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 180,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1229:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1229:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1219:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79204f7261636c6520616c6c6f77656420746f207265706f7274",
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1241:31:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eca28296b4085dd1bcf2b4d418a4c90dcd754b33670619e62d6294f13d537399",
                          "typeString": "literal_string \"Only Oracle allowed to report\""
                        },
                        "value": "Only Oracle allowed to report"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eca28296b4085dd1bcf2b4d418a4c90dcd754b33670619e62d6294f13d537399",
                          "typeString": "literal_string \"Only Oracle allowed to report\""
                        }
                      ],
                      "id": 178,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1211:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1211:62:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 185,
                  "nodeType": "ExpressionStatement",
                  "src": "1211:62:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 187,
                          "name": "electionFinished",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46,
                          "src": "1291:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1311:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1291:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456c656374696f6e2069732066696e6973686564",
                        "id": 190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1318:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3ed4bac9486daea672b38bf7e31493289e75506f577e3971332db94c4d36d9ce",
                          "typeString": "literal_string \"Election is finished\""
                        },
                        "value": "Election is finished"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3ed4bac9486daea672b38bf7e31493289e75506f577e3971332db94c4d36d9ce",
                          "typeString": "literal_string \"Election is finished\""
                        }
                      ],
                      "id": 186,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1283:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1283:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 192,
                  "nodeType": "ExpressionStatement",
                  "src": "1283:58:1"
                },
                {
                  "expression": {
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 193,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "1351:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Result_$42_storage",
                          "typeString": "struct PredictionMarket.Result storage ref"
                        }
                      },
                      "id": 195,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "winner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39,
                      "src": "1351:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$37",
                        "typeString": "enum PredictionMarket.Side"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 196,
                      "name": "_winner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 173,
                      "src": "1367:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$37",
                        "typeString": "enum PredictionMarket.Side"
                      }
                    },
                    "src": "1351:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$37",
                      "typeString": "enum PredictionMarket.Side"
                    }
                  },
                  "id": 198,
                  "nodeType": "ExpressionStatement",
                  "src": "1351:23:1"
                },
                {
                  "expression": {
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 199,
                        "name": "result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "1384:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Result_$42_storage",
                          "typeString": "struct PredictionMarket.Result storage ref"
                        }
                      },
                      "id": 201,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "loser",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41,
                      "src": "1384:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$37",
                        "typeString": "enum PredictionMarket.Side"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 202,
                      "name": "_loser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 175,
                      "src": "1399:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Side_$37",
                        "typeString": "enum PredictionMarket.Side"
                      }
                    },
                    "src": "1384:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$37",
                      "typeString": "enum PredictionMarket.Side"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "1384:21:1"
                },
                {
                  "expression": {
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 205,
                      "name": "electionFinished",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "1415:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1434:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1415:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 208,
                  "nodeType": "ExpressionStatement",
                  "src": "1415:23:1"
                }
              ]
            },
            "functionSelector": "4ec942b7",
            "id": 210,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "reportResult",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 173,
                  "mutability": "mutable",
                  "name": "_winner",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "1165:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$37",
                    "typeString": "enum PredictionMarket.Side"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "Side",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 37,
                    "src": "1165:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$37",
                      "typeString": "enum PredictionMarket.Side"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 175,
                  "mutability": "mutable",
                  "name": "_loser",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "1179:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Side_$37",
                    "typeString": "enum PredictionMarket.Side"
                  },
                  "typeName": {
                    "id": 174,
                    "name": "Side",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 37,
                    "src": "1179:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Side_$37",
                      "typeString": "enum PredictionMarket.Side"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1164:27:1"
            },
            "returnParameters": {
              "id": 177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1201:0:1"
            },
            "scope": 211,
            "src": "1143:302:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 212,
        "src": "26:1422:1"
      }
    ],
    "src": "0:1448:1"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/PredictionMarket.sol",
      "exportedSymbols": {
        "PredictionMarket": [
          211
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.7",
            ".3"
          ]
        },
        "id": 34,
        "name": "PragmaDirective",
        "src": "0:24:1"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            211
          ],
          "name": "PredictionMarket",
          "scope": 212
        },
        "children": [
          {
            "attributes": {
              "canonicalName": "PredictionMarket.Side",
              "name": "Side"
            },
            "children": [
              {
                "attributes": {
                  "name": "Biden"
                },
                "id": 35,
                "name": "EnumValue",
                "src": "70:5:1"
              },
              {
                "attributes": {
                  "name": "Trump"
                },
                "id": 36,
                "name": "EnumValue",
                "src": "77:5:1"
              }
            ],
            "id": 37,
            "name": "EnumDefinition",
            "src": "58:26:1"
          },
          {
            "attributes": {
              "canonicalName": "PredictionMarket.Result",
              "name": "Result",
              "scope": 211,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "winner",
                  "scope": 42,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "enum PredictionMarket.Side",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "Side",
                      "referencedDeclaration": 37,
                      "type": "enum PredictionMarket.Side"
                    },
                    "id": 38,
                    "name": "UserDefinedTypeName",
                    "src": "113:4:1"
                  }
                ],
                "id": 39,
                "name": "VariableDeclaration",
                "src": "113:11:1"
              },
              {
                "attributes": {
                  "constant": false,
                  "mutability": "mutable",
                  "name": "loser",
                  "scope": 42,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "enum PredictionMarket.Side",
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "Side",
                      "referencedDeclaration": 37,
                      "type": "enum PredictionMarket.Side"
                    },
                    "id": 40,
                    "name": "UserDefinedTypeName",
                    "src": "134:4:1"
                  }
                ],
                "id": 41,
                "name": "VariableDeclaration",
                "src": "134:10:1"
              }
            ],
            "id": 42,
            "name": "StructDefinition",
            "src": "89:62:1"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "65372147",
              "mutability": "mutable",
              "name": "result",
              "scope": 211,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "struct PredictionMarket.Result",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "Result",
                  "referencedDeclaration": 42,
                  "type": "struct PredictionMarket.Result"
                },
                "id": 43,
                "name": "UserDefinedTypeName",
                "src": "156:6:1"
              }
            ],
            "id": 44,
            "name": "VariableDeclaration",
            "src": "156:20:1"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "beab6e7e",
              "mutability": "mutable",
              "name": "electionFinished",
              "scope": 211,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "bool",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "bool",
                  "type": "bool"
                },
                "id": 45,
                "name": "ElementaryTypeName",
                "src": "182:4:1"
              }
            ],
            "id": 46,
            "name": "VariableDeclaration",
            "src": "182:28:1"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "7e0ecc00",
              "mutability": "mutable",
              "name": "bets",
              "scope": 211,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(enum PredictionMarket.Side => uint256)",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(enum PredictionMarket.Side => uint256)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "Side",
                      "referencedDeclaration": 37,
                      "type": "enum PredictionMarket.Side"
                    },
                    "id": 47,
                    "name": "UserDefinedTypeName",
                    "src": "225:4:1"
                  },
                  {
                    "attributes": {
                      "name": "uint",
                      "type": "uint256"
                    },
                    "id": 48,
                    "name": "ElementaryTypeName",
                    "src": "233:4:1"
                  }
                ],
                "id": 49,
                "name": "Mapping",
                "src": "217:21:1"
              }
            ],
            "id": 50,
            "name": "VariableDeclaration",
            "src": "217:33:1"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "9d5a3739",
              "mutability": "mutable",
              "name": "betsPerGambler",
              "scope": 211,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => mapping(enum PredictionMarket.Side => uint256))",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => mapping(enum PredictionMarket.Side => uint256))"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 51,
                    "name": "ElementaryTypeName",
                    "src": "264:7:1"
                  },
                  {
                    "attributes": {
                      "type": "mapping(enum PredictionMarket.Side => uint256)"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "Side",
                          "referencedDeclaration": 37,
                          "type": "enum PredictionMarket.Side"
                        },
                        "id": 52,
                        "name": "UserDefinedTypeName",
                        "src": "283:4:1"
                      },
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 53,
                        "name": "ElementaryTypeName",
                        "src": "291:4:1"
                      }
                    ],
                    "id": 54,
                    "name": "Mapping",
                    "src": "275:21:1"
                  }
                ],
                "id": 55,
                "name": "Mapping",
                "src": "256:41:1"
              }
            ],
            "id": 56,
            "name": "VariableDeclaration",
            "src": "256:63:1"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "7dc0d1d0",
              "mutability": "mutable",
              "name": "oracle",
              "scope": 211,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "address payable",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "address",
                  "stateMutability": "payable",
                  "type": "address payable"
                },
                "id": 57,
                "name": "ElementaryTypeName",
                "src": "325:15:1"
              }
            ],
            "id": 58,
            "name": "VariableDeclaration",
            "src": "325:29:1"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 211,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_oracle",
                      "scope": 68,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address payable",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "payable",
                          "type": "address payable"
                        },
                        "id": 59,
                        "name": "ElementaryTypeName",
                        "src": "373:15:1"
                      }
                    ],
                    "id": 60,
                    "name": "VariableDeclaration",
                    "src": "373:23:1"
                  }
                ],
                "id": 61,
                "name": "ParameterList",
                "src": "372:25:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 62,
                "name": "ParameterList",
                "src": "398:0:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "address payable"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 58,
                              "type": "address payable",
                              "value": "oracle"
                            },
                            "id": 63,
                            "name": "Identifier",
                            "src": "408:6:1"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 60,
                              "type": "address payable",
                              "value": "_oracle"
                            },
                            "id": 64,
                            "name": "Identifier",
                            "src": "417:7:1"
                          }
                        ],
                        "id": 65,
                        "name": "Assignment",
                        "src": "408:16:1"
                      }
                    ],
                    "id": 66,
                    "name": "ExpressionStatement",
                    "src": "408:16:1"
                  }
                ],
                "id": 67,
                "name": "Block",
                "src": "398:33:1"
              }
            ],
            "id": 68,
            "name": "FunctionDefinition",
            "src": "361:70:1"
          },
          {
            "attributes": {
              "functionSelector": "43046844",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "placeBet",
              "scope": 211,
              "stateMutability": "payable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_side",
                      "scope": 98,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "enum PredictionMarket.Side",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "Side",
                          "referencedDeclaration": 37,
                          "type": "enum PredictionMarket.Side"
                        },
                        "id": 69,
                        "name": "UserDefinedTypeName",
                        "src": "457:4:1"
                      }
                    ],
                    "id": 70,
                    "name": "VariableDeclaration",
                    "src": "457:10:1"
                  }
                ],
                "id": 71,
                "name": "ParameterList",
                "src": "456:12:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 72,
                "name": "ParameterList",
                "src": "486:0:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_b986f5898326f417b081556bd907c58c5b8ef0652fc690b771b44307f001565f",
                                  "typeString": "literal_string \"election is finished\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 73,
                            "name": "Identifier",
                            "src": "496:7:1"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 46,
                                  "type": "bool",
                                  "value": "electionFinished"
                                },
                                "id": 74,
                                "name": "Identifier",
                                "src": "504:16:1"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "66616c7365",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "false"
                                },
                                "id": 75,
                                "name": "Literal",
                                "src": "524:5:1"
                              }
                            ],
                            "id": 76,
                            "name": "BinaryOperation",
                            "src": "504:25:1"
                          },
                          {
                            "attributes": {
                              "hexvalue": "656c656374696f6e2069732066696e6973686564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"election is finished\"",
                              "value": "election is finished"
                            },
                            "id": 77,
                            "name": "Literal",
                            "src": "531:22:1"
                          }
                        ],
                        "id": 78,
                        "name": "FunctionCall",
                        "src": "496:58:1"
                      }
                    ],
                    "id": 79,
                    "name": "ExpressionStatement",
                    "src": "496:58:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "+=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 50,
                                  "type": "mapping(enum PredictionMarket.Side => uint256)",
                                  "value": "bets"
                                },
                                "id": 80,
                                "name": "Identifier",
                                "src": "564:4:1"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 70,
                                  "type": "enum PredictionMarket.Side",
                                  "value": "_side"
                                },
                                "id": 81,
                                "name": "Identifier",
                                "src": "569:5:1"
                              }
                            ],
                            "id": 82,
                            "name": "IndexAccess",
                            "src": "564:11:1"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "value",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 83,
                                "name": "Identifier",
                                "src": "579:3:1"
                              }
                            ],
                            "id": 84,
                            "name": "MemberAccess",
                            "src": "579:9:1"
                          }
                        ],
                        "id": 85,
                        "name": "Assignment",
                        "src": "564:24:1"
                      }
                    ],
                    "id": 86,
                    "name": "ExpressionStatement",
                    "src": "564:24:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "+=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "mapping(enum PredictionMarket.Side => uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 56,
                                      "type": "mapping(address => mapping(enum PredictionMarket.Side => uint256))",
                                      "value": "betsPerGambler"
                                    },
                                    "id": 87,
                                    "name": "Identifier",
                                    "src": "598:14:1"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": -15,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 88,
                                        "name": "Identifier",
                                        "src": "613:3:1"
                                      }
                                    ],
                                    "id": 89,
                                    "name": "MemberAccess",
                                    "src": "613:10:1"
                                  }
                                ],
                                "id": 91,
                                "name": "IndexAccess",
                                "src": "598:26:1"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 70,
                                  "type": "enum PredictionMarket.Side",
                                  "value": "_side"
                                },
                                "id": 90,
                                "name": "Identifier",
                                "src": "625:5:1"
                              }
                            ],
                            "id": 92,
                            "name": "IndexAccess",
                            "src": "598:33:1"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "value",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 93,
                                "name": "Identifier",
                                "src": "635:3:1"
                              }
                            ],
                            "id": 94,
                            "name": "MemberAccess",
                            "src": "635:9:1"
                          }
                        ],
                        "id": 95,
                        "name": "Assignment",
                        "src": "598:46:1"
                      }
                    ],
                    "id": 96,
                    "name": "ExpressionStatement",
                    "src": "598:46:1"
                  }
                ],
                "id": 97,
                "name": "Block",
                "src": "486:165:1"
              }
            ],
            "id": 98,
            "name": "FunctionDefinition",
            "src": "439:212:1"
          },
          {
            "attributes": {
              "functionSelector": "2b539c86",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "withdrawGain",
              "scope": 211,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 99,
                "name": "ParameterList",
                "src": "678:2:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 100,
                "name": "ParameterList",
                "src": "690:0:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        102
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "gamblerBet",
                          "scope": 170,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 101,
                            "name": "ElementaryTypeName",
                            "src": "700:4:1"
                          }
                        ],
                        "id": 102,
                        "name": "VariableDeclaration",
                        "src": "700:15:1"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "mapping(enum PredictionMarket.Side => uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 56,
                                  "type": "mapping(address => mapping(enum PredictionMarket.Side => uint256))",
                                  "value": "betsPerGambler"
                                },
                                "id": 103,
                                "name": "Identifier",
                                "src": "718:14:1"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -15,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 104,
                                    "name": "Identifier",
                                    "src": "733:3:1"
                                  }
                                ],
                                "id": 105,
                                "name": "MemberAccess",
                                "src": "733:10:1"
                              }
                            ],
                            "id": 106,
                            "name": "IndexAccess",
                            "src": "718:26:1"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "winner",
                              "referencedDeclaration": 39,
                              "type": "enum PredictionMarket.Side"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 44,
                                  "type": "struct PredictionMarket.Result storage ref",
                                  "value": "result"
                                },
                                "id": 107,
                                "name": "Identifier",
                                "src": "745:6:1"
                              }
                            ],
                            "id": 108,
                            "name": "MemberAccess",
                            "src": "745:13:1"
                          }
                        ],
                        "id": 109,
                        "name": "IndexAccess",
                        "src": "718:41:1"
                      }
                    ],
                    "id": 110,
                    "name": "VariableDeclarationStatement",
                    "src": "700:59:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_4a6c469159dbe2b1ce563e70d4dfb781a720f9a0aa12667fb34c0f2ff848f927",
                                  "typeString": "literal_string \"You do not have any winning bet\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 111,
                            "name": "Identifier",
                            "src": "769:7:1"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 102,
                                  "type": "uint256",
                                  "value": "gamblerBet"
                                },
                                "id": 112,
                                "name": "Identifier",
                                "src": "777:10:1"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 113,
                                "name": "Literal",
                                "src": "790:1:1"
                              }
                            ],
                            "id": 114,
                            "name": "BinaryOperation",
                            "src": "777:14:1"
                          },
                          {
                            "attributes": {
                              "hexvalue": "596f7520646f206e6f74206861766520616e792077696e6e696e6720626574",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"You do not have any winning bet\"",
                              "value": "You do not have any winning bet"
                            },
                            "id": 115,
                            "name": "Literal",
                            "src": "793:33:1"
                          }
                        ],
                        "id": 116,
                        "name": "FunctionCall",
                        "src": "769:58:1"
                      }
                    ],
                    "id": 117,
                    "name": "ExpressionStatement",
                    "src": "769:58:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_e7e6bdb27abe05a89bb6860279b9b8caf97f66bf335fd3b12194199de6a23f11",
                                  "typeString": "literal_string \"election not finished\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 118,
                            "name": "Identifier",
                            "src": "837:7:1"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "=",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 46,
                                  "type": "bool",
                                  "value": "electionFinished"
                                },
                                "id": 119,
                                "name": "Identifier",
                                "src": "845:16:1"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "74727565",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "true"
                                },
                                "id": 120,
                                "name": "Literal",
                                "src": "864:4:1"
                              }
                            ],
                            "id": 121,
                            "name": "Assignment",
                            "src": "845:23:1"
                          },
                          {
                            "attributes": {
                              "hexvalue": "656c656374696f6e206e6f742066696e6973686564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"election not finished\"",
                              "value": "election not finished"
                            },
                            "id": 122,
                            "name": "Literal",
                            "src": "870:23:1"
                          }
                        ],
                        "id": 123,
                        "name": "FunctionCall",
                        "src": "837:57:1"
                      }
                    ],
                    "id": 124,
                    "name": "ExpressionStatement",
                    "src": "837:57:1"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        126
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "gain",
                          "scope": 170,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 125,
                            "name": "ElementaryTypeName",
                            "src": "904:4:1"
                          }
                        ],
                        "id": 126,
                        "name": "VariableDeclaration",
                        "src": "904:9:1"
                      },
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "+",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 102,
                              "type": "uint256",
                              "value": "gamblerBet"
                            },
                            "id": 127,
                            "name": "Identifier",
                            "src": "916:10:1"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "/",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "operator": "*",
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 50,
                                          "type": "mapping(enum PredictionMarket.Side => uint256)",
                                          "value": "bets"
                                        },
                                        "id": 128,
                                        "name": "Identifier",
                                        "src": "929:4:1"
                                      },
                                      {
                                        "attributes": {
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "loser",
                                          "referencedDeclaration": 41,
                                          "type": "enum PredictionMarket.Side"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 44,
                                              "type": "struct PredictionMarket.Result storage ref",
                                              "value": "result"
                                            },
                                            "id": 129,
                                            "name": "Identifier",
                                            "src": "934:6:1"
                                          }
                                        ],
                                        "id": 130,
                                        "name": "MemberAccess",
                                        "src": "934:12:1"
                                      }
                                    ],
                                    "id": 131,
                                    "name": "IndexAccess",
                                    "src": "929:18:1"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 102,
                                      "type": "uint256",
                                      "value": "gamblerBet"
                                    },
                                    "id": 132,
                                    "name": "Identifier",
                                    "src": "950:10:1"
                                  }
                                ],
                                "id": 133,
                                "name": "BinaryOperation",
                                "src": "929:31:1"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 50,
                                      "type": "mapping(enum PredictionMarket.Side => uint256)",
                                      "value": "bets"
                                    },
                                    "id": 134,
                                    "name": "Identifier",
                                    "src": "963:4:1"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "winner",
                                      "referencedDeclaration": 39,
                                      "type": "enum PredictionMarket.Side"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 44,
                                          "type": "struct PredictionMarket.Result storage ref",
                                          "value": "result"
                                        },
                                        "id": 135,
                                        "name": "Identifier",
                                        "src": "968:6:1"
                                      }
                                    ],
                                    "id": 136,
                                    "name": "MemberAccess",
                                    "src": "968:13:1"
                                  }
                                ],
                                "id": 137,
                                "name": "IndexAccess",
                                "src": "963:19:1"
                              }
                            ],
                            "id": 138,
                            "name": "BinaryOperation",
                            "src": "929:53:1"
                          }
                        ],
                        "id": 139,
                        "name": "BinaryOperation",
                        "src": "916:66:1"
                      }
                    ],
                    "id": 140,
                    "name": "VariableDeclarationStatement",
                    "src": "904:78:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "mapping(enum PredictionMarket.Side => uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 56,
                                      "type": "mapping(address => mapping(enum PredictionMarket.Side => uint256))",
                                      "value": "betsPerGambler"
                                    },
                                    "id": 141,
                                    "name": "Identifier",
                                    "src": "992:14:1"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": -15,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 142,
                                        "name": "Identifier",
                                        "src": "1007:3:1"
                                      }
                                    ],
                                    "id": 143,
                                    "name": "MemberAccess",
                                    "src": "1007:10:1"
                                  }
                                ],
                                "id": 146,
                                "name": "IndexAccess",
                                "src": "992:26:1"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "Biden",
                                  "type": "enum PredictionMarket.Side"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 37,
                                      "type": "type(enum PredictionMarket.Side)",
                                      "value": "Side"
                                    },
                                    "id": 144,
                                    "name": "Identifier",
                                    "src": "1019:4:1"
                                  }
                                ],
                                "id": 145,
                                "name": "MemberAccess",
                                "src": "1019:10:1"
                              }
                            ],
                            "id": 147,
                            "name": "IndexAccess",
                            "src": "992:38:1"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 148,
                            "name": "Literal",
                            "src": "1033:1:1"
                          }
                        ],
                        "id": 149,
                        "name": "Assignment",
                        "src": "992:42:1"
                      }
                    ],
                    "id": 150,
                    "name": "ExpressionStatement",
                    "src": "992:42:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "mapping(enum PredictionMarket.Side => uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 56,
                                      "type": "mapping(address => mapping(enum PredictionMarket.Side => uint256))",
                                      "value": "betsPerGambler"
                                    },
                                    "id": 151,
                                    "name": "Identifier",
                                    "src": "1044:14:1"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": -15,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 152,
                                        "name": "Identifier",
                                        "src": "1059:3:1"
                                      }
                                    ],
                                    "id": 153,
                                    "name": "MemberAccess",
                                    "src": "1059:10:1"
                                  }
                                ],
                                "id": 156,
                                "name": "IndexAccess",
                                "src": "1044:26:1"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "Trump",
                                  "type": "enum PredictionMarket.Side"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 37,
                                      "type": "type(enum PredictionMarket.Side)",
                                      "value": "Side"
                                    },
                                    "id": 154,
                                    "name": "Identifier",
                                    "src": "1071:4:1"
                                  }
                                ],
                                "id": 155,
                                "name": "MemberAccess",
                                "src": "1071:10:1"
                              }
                            ],
                            "id": 157,
                            "name": "IndexAccess",
                            "src": "1044:38:1"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 158,
                            "name": "Literal",
                            "src": "1085:1:1"
                          }
                        ],
                        "id": 159,
                        "name": "Assignment",
                        "src": "1044:42:1"
                      }
                    ],
                    "id": 160,
                    "name": "ExpressionStatement",
                    "src": "1044:42:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "transfer",
                              "type": "function (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address payable)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "name": "address",
                                          "stateMutability": "payable"
                                        },
                                        "id": 161,
                                        "name": "ElementaryTypeName",
                                        "src": "1096:8:1"
                                      }
                                    ],
                                    "id": 162,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "1096:8:1"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": -15,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 163,
                                        "name": "Identifier",
                                        "src": "1104:3:1"
                                      }
                                    ],
                                    "id": 164,
                                    "name": "MemberAccess",
                                    "src": "1104:10:1"
                                  }
                                ],
                                "id": 165,
                                "name": "FunctionCall",
                                "src": "1096:19:1"
                              }
                            ],
                            "id": 166,
                            "name": "MemberAccess",
                            "src": "1096:28:1"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 126,
                              "type": "uint256",
                              "value": "gain"
                            },
                            "id": 167,
                            "name": "Identifier",
                            "src": "1125:4:1"
                          }
                        ],
                        "id": 168,
                        "name": "FunctionCall",
                        "src": "1096:34:1"
                      }
                    ],
                    "id": 169,
                    "name": "ExpressionStatement",
                    "src": "1096:34:1"
                  }
                ],
                "id": 170,
                "name": "Block",
                "src": "690:447:1"
              }
            ],
            "id": 171,
            "name": "FunctionDefinition",
            "src": "657:480:1"
          },
          {
            "attributes": {
              "functionSelector": "4ec942b7",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "reportResult",
              "scope": 211,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_winner",
                      "scope": 210,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "enum PredictionMarket.Side",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "Side",
                          "referencedDeclaration": 37,
                          "type": "enum PredictionMarket.Side"
                        },
                        "id": 172,
                        "name": "UserDefinedTypeName",
                        "src": "1165:4:1"
                      }
                    ],
                    "id": 173,
                    "name": "VariableDeclaration",
                    "src": "1165:12:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_loser",
                      "scope": 210,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "enum PredictionMarket.Side",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "Side",
                          "referencedDeclaration": 37,
                          "type": "enum PredictionMarket.Side"
                        },
                        "id": 174,
                        "name": "UserDefinedTypeName",
                        "src": "1179:4:1"
                      }
                    ],
                    "id": 175,
                    "name": "VariableDeclaration",
                    "src": "1179:11:1"
                  }
                ],
                "id": 176,
                "name": "ParameterList",
                "src": "1164:27:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 177,
                "name": "ParameterList",
                "src": "1201:0:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_eca28296b4085dd1bcf2b4d418a4c90dcd754b33670619e62d6294f13d537399",
                                  "typeString": "literal_string \"Only Oracle allowed to report\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 178,
                            "name": "Identifier",
                            "src": "1211:7:1"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 58,
                                  "type": "address payable",
                                  "value": "oracle"
                                },
                                "id": 179,
                                "name": "Identifier",
                                "src": "1219:6:1"
                              },
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": -15,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 180,
                                    "name": "Identifier",
                                    "src": "1229:3:1"
                                  }
                                ],
                                "id": 181,
                                "name": "MemberAccess",
                                "src": "1229:10:1"
                              }
                            ],
                            "id": 182,
                            "name": "BinaryOperation",
                            "src": "1219:20:1"
                          },
                          {
                            "attributes": {
                              "hexvalue": "4f6e6c79204f7261636c6520616c6c6f77656420746f207265706f7274",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Only Oracle allowed to report\"",
                              "value": "Only Oracle allowed to report"
                            },
                            "id": 183,
                            "name": "Literal",
                            "src": "1241:31:1"
                          }
                        ],
                        "id": 184,
                        "name": "FunctionCall",
                        "src": "1211:62:1"
                      }
                    ],
                    "id": 185,
                    "name": "ExpressionStatement",
                    "src": "1211:62:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_3ed4bac9486daea672b38bf7e31493289e75506f577e3971332db94c4d36d9ce",
                                  "typeString": "literal_string \"Election is finished\""
                                }
                              ],
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 186,
                            "name": "Identifier",
                            "src": "1283:7:1"
                          },
                          {
                            "attributes": {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 46,
                                  "type": "bool",
                                  "value": "electionFinished"
                                },
                                "id": 187,
                                "name": "Identifier",
                                "src": "1291:16:1"
                              },
                              {
                                "attributes": {
                                  "hexvalue": "66616c7365",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "token": "bool",
                                  "type": "bool",
                                  "value": "false"
                                },
                                "id": 188,
                                "name": "Literal",
                                "src": "1311:5:1"
                              }
                            ],
                            "id": 189,
                            "name": "BinaryOperation",
                            "src": "1291:25:1"
                          },
                          {
                            "attributes": {
                              "hexvalue": "456c656374696f6e2069732066696e6973686564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "string",
                              "type": "literal_string \"Election is finished\"",
                              "value": "Election is finished"
                            },
                            "id": 190,
                            "name": "Literal",
                            "src": "1318:22:1"
                          }
                        ],
                        "id": 191,
                        "name": "FunctionCall",
                        "src": "1283:58:1"
                      }
                    ],
                    "id": 192,
                    "name": "ExpressionStatement",
                    "src": "1283:58:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "enum PredictionMarket.Side"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "winner",
                              "referencedDeclaration": 39,
                              "type": "enum PredictionMarket.Side"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 44,
                                  "type": "struct PredictionMarket.Result storage ref",
                                  "value": "result"
                                },
                                "id": 193,
                                "name": "Identifier",
                                "src": "1351:6:1"
                              }
                            ],
                            "id": 195,
                            "name": "MemberAccess",
                            "src": "1351:13:1"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 173,
                              "type": "enum PredictionMarket.Side",
                              "value": "_winner"
                            },
                            "id": 196,
                            "name": "Identifier",
                            "src": "1367:7:1"
                          }
                        ],
                        "id": 197,
                        "name": "Assignment",
                        "src": "1351:23:1"
                      }
                    ],
                    "id": 198,
                    "name": "ExpressionStatement",
                    "src": "1351:23:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "enum PredictionMarket.Side"
                        },
                        "children": [
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "loser",
                              "referencedDeclaration": 41,
                              "type": "enum PredictionMarket.Side"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 44,
                                  "type": "struct PredictionMarket.Result storage ref",
                                  "value": "result"
                                },
                                "id": 199,
                                "name": "Identifier",
                                "src": "1384:6:1"
                              }
                            ],
                            "id": 201,
                            "name": "MemberAccess",
                            "src": "1384:12:1"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 175,
                              "type": "enum PredictionMarket.Side",
                              "value": "_loser"
                            },
                            "id": 202,
                            "name": "Identifier",
                            "src": "1399:6:1"
                          }
                        ],
                        "id": 203,
                        "name": "Assignment",
                        "src": "1384:21:1"
                      }
                    ],
                    "id": 204,
                    "name": "ExpressionStatement",
                    "src": "1384:21:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 46,
                              "type": "bool",
                              "value": "electionFinished"
                            },
                            "id": 205,
                            "name": "Identifier",
                            "src": "1415:16:1"
                          },
                          {
                            "attributes": {
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 206,
                            "name": "Literal",
                            "src": "1434:4:1"
                          }
                        ],
                        "id": 207,
                        "name": "Assignment",
                        "src": "1415:23:1"
                      }
                    ],
                    "id": 208,
                    "name": "ExpressionStatement",
                    "src": "1415:23:1"
                  }
                ],
                "id": 209,
                "name": "Block",
                "src": "1201:244:1"
              }
            ],
            "id": 210,
            "name": "FunctionDefinition",
            "src": "1143:302:1"
          }
        ],
        "id": 211,
        "name": "ContractDefinition",
        "src": "26:1422:1"
      }
    ],
    "id": 212,
    "name": "SourceUnit",
    "src": "0:1448:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.3+commit.9bfce1f6.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-09-08T12:42:02.048Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}